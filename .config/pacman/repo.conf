# -- OPTIONS
#   NOTE: You must run `pacman-key --init` before first using pacman; the local
#   keyring can then be populated with the keys of all official Arch Linux
#   packagers with `pacman-key --populate archlinux`.
#
#     - pacman will search repositories in the order defined here
#     - local/custom mirrors can be added here or in separate files
#     - repositories listed first will take precedence when packages
#       have identical names, regardless of version number
#     - URLs will have $repo replaced by the name of the current repo
#     - URLs will have $arch replaced by the name of the architecture
#
#   Repository entries are of the format:
#         [repo-name]
#         Server = ServerName
#         Include = IncludePath
#
#   The header [repo-name] is crucial - it must be present and
#   uncommented to enable the repo.
# --

# -- REPOS

    # -- Main
    # [core-testing]
    #   Include = /etc/pacman.d/mirrorlist
    [core]
        Include = /etc/pacman.d/mirrorlist
    # [extra-testing]
    #   Include = /etc/pacman.d/mirrorlist
    [extra]
        Include = /etc/pacman.d/mirrorlist

    #   If you want to run 32 bit applications on your x86_64 system,
    #   enable the multilib repositories as required here.

    # [multilib-testing]
    #   Include = /etc/pacman.d/mirrorlist
    [multilib]
        Include = /etc/pacman.d/mirrorlist
    # --

    # -- CUSTOM

    #   An example of a custom package repository.  See the pacman manpage for
    #   tips on creating your own repositories.

    # [custom]
    #   SigLevel = Optional TrustAll
    #   Server = file:///home/custompkgs
    # --
# --
